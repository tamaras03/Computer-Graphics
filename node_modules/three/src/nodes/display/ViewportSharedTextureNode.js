import ViewportTextureNode from './ViewportTextureNode.js';
import { nodeProxy } from '../tsl/TSLBase.js';
import { screenUV } from './ScreenNode.js';

import { FramebufferTexture } from '../../textures/FramebufferTexture.js';

let _sharedFramebuffer = null;

<<<<<<< HEAD
=======
/**
 * `ViewportTextureNode` creates an internal texture for each node instance. This module
 * shares a texture across all instances of `ViewportSharedTextureNode`. It should
 * be the first choice when using data of the default/screen framebuffer for performance reasons.
 *
 * @augments ViewportTextureNode
 */
>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
class ViewportSharedTextureNode extends ViewportTextureNode {

	static get type() {

		return 'ViewportSharedTextureNode';

	}

<<<<<<< HEAD
=======
	/**
	 * Constructs a new viewport shared texture node.
	 *
	 * @param {Node} [uvNode=screenUV] - The uv node.
	 * @param {?Node} [levelNode=null] - The level node.
	 */
>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
	constructor( uvNode = screenUV, levelNode = null ) {

		if ( _sharedFramebuffer === null ) {

			_sharedFramebuffer = new FramebufferTexture();

		}

		super( uvNode, levelNode, _sharedFramebuffer );

	}

<<<<<<< HEAD
=======
	/**
	 * Overwritten so the method always returns the unique shared
	 * framebuffer texture.
	 *
	 * @return {FramebufferTexture} The shared framebuffer texture.
	 */
	getTextureForReference() {

		return _sharedFramebuffer;

	}

>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
	updateReference() {

		return this;

	}

}

export default ViewportSharedTextureNode;

<<<<<<< HEAD
export const viewportSharedTexture = /*@__PURE__*/ nodeProxy( ViewportSharedTextureNode );
=======
/**
 * TSL function for creating a shared viewport texture node.
 *
 * @tsl
 * @function
 * @param {?Node} [uvNode=screenUV] - The uv node.
 * @param {?Node} [levelNode=null] - The level node.
 * @returns {ViewportSharedTextureNode}
 */
export const viewportSharedTexture = /*@__PURE__*/ nodeProxy( ViewportSharedTextureNode ).setParameterLength( 0, 2 );
>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
