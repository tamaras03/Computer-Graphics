let _context;

<<<<<<< HEAD
class AudioContext {

=======
/**
 * Manages the global audio context in the engine.
 *
 * @hideconstructor
 */
class AudioContext {

	/**
	 * Returns the global native audio context.
	 *
	 * @return {AudioContext} The native audio context.
	 */
>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
	static getContext() {

		if ( _context === undefined ) {

			_context = new ( window.AudioContext || window.webkitAudioContext )();

		}

		return _context;

	}

<<<<<<< HEAD
=======
	/**
	 * Allows to set the global native audio context from outside.
	 *
	 * @param {AudioContext} value - The native context to set.
	 */
>>>>>>> 50c6784a0819c7177d83555e6a1624cb4553e499
	static setContext( value ) {

		_context = value;

	}

}

export { AudioContext };
